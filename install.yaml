esp32:  
  board: esp32dev  # Spécifie le modèle de la carte ESP32 (ESP32 DevKit V1 ici).
  framework:
    type: arduino  # Utilisation du framework Arduino

# Inclusion d'une configuration externe pour modularité et réutilisation.
packages:
  twinsen68.pompe_doseuses_esphome:
    url: https://github.com/Twinsen68/pompe_doseuses_esphome
    file: pompedoseuses_config.yaml
    ref: v1.3.4

esphome:
  name: pompe_doseuses_esphome
  name_add_mac_suffix: false
  friendly_name: "Pompes doseuses récifales"
  platformio_options:
    build_flags:
      - -DBROWNOUT_DISABLE
  on_boot:
    priority: -100
    then:
      - lambda: |-
          id(pump1_manual_dose_active) = false;
          ESP_LOGW("pump", "Remise à zéro de pump1_manual_dose_active au boot !");
      - stepper.report_position:
          id: pump1_stepper
          position: 0
api:
  encryption:
    key: tsHqLo48mLGhWo/qQQrZUFdsEwuZcC1/BlUOXWExy14=

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_passwor

text_sensor:
  - platform: wifi_info
    ip_address:
      name: "Adresse IP ESP32"
      icon: mdi:ip
    ssid:
      name: "WiFi SSID"
      icon: mdi:wifi
    bssid:
      name: "WiFi BSSID"
      icon: mdi:access-point-network
    mac_address:
      name: "Adresse MAC"
      icon: mdi:lan

logger:
  level: DEBUG  # 
ota:
web_server:
  port: 80

time:
  - platform: sntp
    id: my_time